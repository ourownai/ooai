version: '3'

networks:
  bigbot-network:
    driver: bridge

volumes:
  postgres-data:
  neo4j-data:

services:
  pg:
    image: postgres:latest
    networks:
      - bigbot-network
    ports:
      - "5432:5432"
    volumes:
      - ./src/clients/pg.sql:/docker-entrypoint-initdb.d/pg.sql
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always

  neo4j:
    image: neo4j:latest
    networks:
      - bigbot-network
    volumes:
      - ./src/graphs/graphs.cql:/var/lib/neo4j/import/graphs.cql
      - neo4j-data:/data
    restart: always
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/12345678
    command: ["neo4j"]

  bigbot:
    networks:
      - bigbot-network
    depends_on:
      - pg
      - neo4j
      - kafka
      - mqtt
    ports:
      - "9090:9090"
    volumes:
      - ./:/app
    environment:
      - NEO4J_URI=neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWD=12345678
      - POSTGRES_HOST=pg
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWD=postgres
      - HTTP_SERVER_PORT=9090
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MQTT_BROKER_URL=mqtt://mqtt:1883
    restart: always
    build:
      context: .
      dockerfile: Dockerfile

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mqtt:
    image: eclipse-mosquitto:latest
    ports:
      - 1883:1883
    volumes:
      - ./resources/mosquitto.conf:/mosquitto/config/mosquitto.conf

  hasura:
    image: hasura/graphql-engine:latest
    ports:
      - "8080:8080"
    depends_on:
      - pg
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: admin_secret
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@pg:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"
      HASURA_GRAPHQL_ENABLE_ALLOWLIST: "true"
